global
    daemon
    log stdout local0 info
    stats socket /var/lib/haproxy/stats
    user haproxy
    group haproxy
    
    # Security settings
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode tcp
    log global
    option tcplog
    option dontlognull
    retries 3
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    timeout check 5000ms

# Stats interface for monitoring
frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# SSH Honeypot (Cowrie) - Port 2222
frontend ssh_2222
    bind *:2222
    mode tcp
    option tcplog
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    default_backend cowrie_2222

backend cowrie_2222
    mode tcp
    balance roundrobin
    # Basic health check without PROXY protocol
    option httpchk GET /
    http-check expect status 200
    # Send PROXY protocol v1 header to preserve original client IP
    server cowrie1 cowrie:2222 check send-proxy inter 30s fall 3 rise 2

# SSH Honeypot (Cowrie) - Port 2223
frontend ssh_2223
    bind *:2223
    mode tcp
    option tcplog
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    default_backend cowrie_2223

backend cowrie_2223
    mode tcp
    balance roundrobin
    # Basic health check without PROXY protocol
    option httpchk GET /
    http-check expect status 200
    # Send PROXY protocol v1 header to preserve original client IP
    server cowrie2 cowrie:2223 check send-proxy inter 30s fall 3 rise 2

# Redis Honeypot - Port 6379
frontend redis_6379
    bind *:6379
    mode tcp
    option tcplog
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    default_backend redis_backend

backend redis_backend
    mode tcp
    balance roundrobin
    # Disable health checks for Redis to avoid PROXY protocol conflicts
    # Send PROXY protocol v1 header to preserve original client IP
    server redis1 redis-honeypot:6379 send-proxy

# Future TCP honeypots can be added here following the same pattern
# Example template for new TCP honeypot:
#
# frontend new_honeypot_PORT
#     bind *:PORT
#     mode tcp
#     option tcplog
#     log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
#     default_backend new_honeypot_backend
#
# backend new_honeypot_backend
#     mode tcp
#     balance roundrobin
#     server honeypot1 service-name:PORT check send-proxy