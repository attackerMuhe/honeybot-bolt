version: '3.8'

services:
  # HAProxy Load Balancer with PROXY Protocol Support
  haproxy:
    build:
      context: ./haproxy
      dockerfile: Dockerfile
    container_name: haproxy-honeypot
    hostname: haproxy-honeypot
    ports:
      # TCP services exposed through HAProxy
      - "2222:2222"  # SSH (Cowrie)
      - "2223:2223"  # SSH (Cowrie)
      - "6379:6379"  # Redis
      - "8404:8404"  # HAProxy Stats
    networks:
      - elastic
    depends_on:
      - cowrie
      - redis-honeypot
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  cowrie:
    image: cowrie/cowrie:latest
    container_name: cowrie
    hostname: cowrie
    volumes:
      - ./cowrie-logs:/cowrie/var/log/cowrie
      - ./cowrie/cowrie.cfg:/cowrie/etc/cowrie.cfg:ro
      - cowrie_data:/cowrie/var/lib/cowrie
    environment:
      - COWRIE_HOSTNAME=srv01
      - COWRIE_LOG_LEVEL=INFO
    networks:
      - elastic
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "netstat -tuln | grep 2222 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  dionaea:
    image: dinotools/dionaea:latest
    container_name: dionaea
    hostname: dionaea
    network_mode: host
    volumes:
      - ./dionaea-logs:/opt/dionaea/var/log
      - dionaea_data:/opt/dionaea/var/lib/dionaea
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD-SHELL", "netstat -tuln | grep 21 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-honeypot:
    build: ./redis-honeypot
    container_name: redis-honeypot
    hostname: redis-honeypot
    volumes:
      - ./redis-logs:/var/log/redis
      - ./redis-honeypot/redis-logger.sh:/usr/local/bin/redis-logger.sh:ro
      - ./redis-honeypot/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - elastic
    restart: unless-stopped
    command: >
      sh -c "
        mkdir -p /var/log/redis &&
        touch /var/log/redis/redis.log /var/log/redis/redis-honeypot.json &&
        redis-server /usr/local/etc/redis/redis.conf &
        /usr/local/bin/redis-logger.sh &
        wait
      "
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  snmp-honeypot:
    build:
      context: ./snmp-honeypot
      dockerfile: Dockerfile
    container_name: snmp-honeypot
    hostname: snmp-honeypot
    network_mode: host
    volumes:
      - ./snmp-logs:/var/log/snmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "netstat -uln | grep 161 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  cowrie_data:
    driver: local
  dionaea_data:
    driver: local

networks:
  elastic:
    external: true
    name: elastic